/* eslint-disable no-use-before-define */
// noinspection JSUnusedGlobalSymbols

import { lBlue, m } from 'af-color';
import { echo } from 'af-echo-ts';
import { Debug } from 'af-tools-ts';
import { MIN_WINDOW_MILLIS } from '../../constants';
import { EWinInsertType } from '../../interfaces';
import { findIndexOfNearestSmaller } from '../../utils/find-index-of-nearest-smaller';
import { VirtualTimeObj } from '../../VirtualTimeObj';

const debug = Debug('TimeWindow');

export interface ITimeWindowItem<T> {
  ts: number,
  data?: T,
}

export interface ITimeWindowSetStatOptions<T, S = any> {
  timeWindow: TimeWindow<T, S>,
  winInsertType: EWinInsertType,
  added?: ITimeWindowItem<T>,
  removed?: ITimeWindowItem<T>[],
}

export interface ITimeWindowConstructorOptions<T, S = any> {
  /**
   * –û—Ç–ª–∏—á–∏—Ç–µ–ª—å–Ω–æ–µ –∏–º—è –æ–∫–Ω–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
   */
  winName: string,
  /**
   * –ö–ª—é—á –æ–∫–Ω–∞, –∫–æ–≥–¥–∞ –æ–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –æ–±—ä–µ–∫—Ç–µ KeyedTimeWindow
   */
  key?: string | number,
  /**
   * –®–∏—Ä–∏–Ω–∞ –æ–∫–Ω–∞, –º—Å
   */
  widthMillis: number,
  /**
   * –û–∫–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ "–≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ" –≤—Ä–µ–º–µ–Ω–∏, —á—Ç–æ –≤–∞–∂–Ω–æ –≤ —Ä–µ–∂–∏–º–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö.
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —É—Å—Ç–∞—Ä–µ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –≤ –æ–∫–Ω–µ, –≤ —Ñ—É–Ω–∫—Ü–∏–∏ this.removeExpired()
   */
  virtualTimeObj?: VirtualTimeObj,
  /**
   * –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ—á–∏—Å—Ç–∫–∏ –æ–∫–Ω–∞ –æ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Å–æ–±—ã—Ç–∏–π.
   * –ï—Å–ª–∏ 0, —Ç–æ –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞–∂–¥–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
   */
  removeExpiredIntervalMillis?: number,
  /**
   * –ö–∞—Å—Ç–æ–º–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.
   */
  initStat?: (_timeWindow: TimeWindow<T, S>) => void,
  /**
   * –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏(—É–¥–∞–ª–µ–Ω–∏–∏) —Å–æ–±—ã—Ç–∏–π –≤ –æ–∫–Ω–æ.
   * –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–∞, —Ç–æ –ø–æ–¥–º–µ–Ω–∏—Ç —Å–æ–±–æ–π –º–µ—Ç–æ–¥ this.setStat()
   */
  setStat?: (_setStatOptions: ITimeWindowSetStatOptions<T, S>) => void,
  /**
   * –ö–∞—Å—Ç–æ–º–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –û–Ω–∞ –ø–æ–¥–º–µ–Ω–∏—Ç –º–µ—Ç–æ–¥ –æ–∫–Ω–∞ this.getStat()
   * –ï—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞, —Ç–æ –º–µ—Ç–æ–¥ this.getStat() –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ –æ–∫–Ω–∞ stat
   */
  getStat?: <ST = any>(timeWindow: TimeWindow<T, S>, ...args: any[]) => ST,
  /**
   * –ü–µ—Ä–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –≤ –º–æ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞.
   * –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–æ–±–Ω–æ, –∫–æ–≥–¥–∞ –æ–∫–Ω–∞ —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ –º–µ—Ä–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞.
   */
  item?: ITimeWindowItem<T>,
}

/**
 * –í–†–ï–ú–ï–ù–ù–û–ïÃÅ –û–ö–ù–û –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Å–æ–±—ã—Ç–∏–π –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞.
 * –°–æ–±—ã—Ç–∏—è –æ–±—è–∑–∞–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–µ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏.
 * –û–Ω–∏ –ø–æ—Å—Ç—É–ø–∞—é—Ç –≤ –æ–∫–Ω–æ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ add() –∏ –≤—ã–±—ã–≤–∞—é—Ç (–ø—Ä–∏ –≤—ã–∑–æ–≤–µ –º–µ—Ç–æ–¥–∞ this.removeExpired())
 * –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —É—Å—Ç–∞—Ä–µ—é—Ç (–∫–æ–≥–¥–∞ –∏—Ö –º–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Å–¥–≤–∏–Ω–µ—Ç—Å—è –≤–ø—Ä–∞–≤–æ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –æ–∫–Ω–∞)
 *
 * –ú–µ—Ç–æ–¥ this.removeExpired(), —É–¥–∞–ª—è—é—â–∏–π —Å–æ–±—ã—Ç–∏—è, –æ–∫–∞–∑–∞–≤—à–∏–µ—Å—è –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –æ–∫–Ω–∞ (—Å–ª–µ–≤–∞)
 * –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏–±–æ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏, —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª "this.removeExpiredIntervalMillis",
 * –ª–∏–±–æ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–æ–≤–æ–º —Å–æ–±—ã—Ç–∏–∏ (–µ—Å–ª–∏ this.removeExpiredIntervalMillis –Ω–µ –∑–∞–¥–∞–Ω)
 */
export class TimeWindow<T, S = any> {
  /**
   * –°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ - –û–ö–ù–û - —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–π –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –º–∞—Å—Å–∏–≤ —Å–æ–±—ã—Ç–∏–π
   */
  public win: ITimeWindowItem<T>[] = [];

  /**
   * –õ–∏–±–æ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–±—ã—Ç–∏—è –≤ –æ–∫–Ω–µ.
   * –õ–∏–±–æ, –≤ —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ –ø–µ—Ä–µ–¥–∞–Ω virtualTimeObj –∏ –æ—á–∏—Å—Ç–∫–∞ –æ–∫–Ω–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏,
   * –≤ —ç—Ç–æ–º —Å–≤–æ–π—Å—Ç–≤–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—á–∏—Å—Ç–∫–∏. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –æ—á–∏—Å—Ç–∫–∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏ —Å–æ–±—ã—Ç–∏–π.
   */
  public lastTs: number = 0;

  /**
   * expireTs - –≤—Ä–µ–º—è –≤ –æ–∫–Ω–µ, –ª–µ–≤–µ–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–æ–±—ã—Ç–∏—è —É—Å—Ç–∞—Ä–µ–ª–∏.
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏–Ω–¥–µ–∫—Å–∞ –ø–µ—Ä–≤–æ–≥–æ —É—Å—Ç–∞—Ä–µ–≤—à–µ–≥–æ —Å–æ–±—ã—Ç–∏—è
   * —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ findIndexOfNearestSmaller()
   */
  public expireTs: number = 0;

  /**
   * –®–∏—Ä–∏–Ω–∞ –æ–∫–Ω–∞, –º—Å
   */
  public widthMillis: number;

  /**
   * –§–ª–∞–≥, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—ã–π –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞
   * –∏ –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –æ—á–∏—Å—Ç–∫–∏ –æ–∫–Ω–∞ –æ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Å–æ–±—ã—Ç–∏–π:
   * –ï—Å–ª–∏ true - –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ –µ–≥–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É.
   * –ï—Å–ª–∏ false - –æ—á–∏—Å—Ç–∫–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è.
   * (–í –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å–ª—É—á–∞–µ, –∑–Ω–∞—á–∏—Ç, –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –±—ã–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã virtualTimeObj –∏ –Ω–µ–Ω—É–ª–µ–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä removeExpiredIntervalMillis)
   */
  public readonly removeExpiredOnEveryEvents: boolean;

  /**
   * –ú–µ—Å—Ç–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–ø–∏—Å–∞–Ω–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –≤ —Ñ—É–Ω–∫—Ü–∏–∏ setStat,
   * –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–π –≤ –æ–ø—Ü–∏—è—Ö –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞
   */
  public stat: S;

  /**
   * –ú–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞, –∑–∞–ø–æ–ª–Ω—è—é—â–∏–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ –¥–µ–ª–∞–µ—Ç –Ω–∏—á–µ–≥–æ. –ù–æ –µ—Å–ª–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞
   * –≤ –æ–ø—Ü–∏—è—Ö –ø–µ—Ä–µ–¥–∞–Ω–æ —Å–≤–æ–π—Å—Ç–≤–æ setStat (—Ñ—É–Ω–∫—Ü–∏—è), –æ–Ω–æ –∑–∞–º–µ—â–∞–µ—Ç –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
   * –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —ç—Ç–æ–π –∫–∞—Å—Ç–æ–º–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
   */
  public setStat: (_arg: ITimeWindowSetStatOptions<T, S>) => void;

  /**
   * –ú–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–≤–æ–π—Å—Ç–≤–æ –∫–ª–∞—Å—Å–∞ this.stat.
   * –ù–æ –µ—Å–ª–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ –≤ –æ–ø—Ü–∏—è—Ö –ø–µ—Ä–µ–¥–∞–Ω–æ —Å–≤–æ–π—Å—Ç–≤–æ getStat (—Ñ—É–Ω–∫—Ü–∏—è),
   * –æ–Ω–æ –∑–∞–º–µ—â–∞–µ—Ç –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞ this.getStat –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —ç—Ç–æ–π –∫–∞—Å—Ç–æ–º–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
   */
  public getStat: <ST = any>(timeWindow: TimeWindow<T, S>, ...args: any[]) => ST;

  _removeExpiredTimer: any;

  constructor (public options: ITimeWindowConstructorOptions<T, S>) {
    const { widthMillis, virtualTimeObj, getStat, item, removeExpiredIntervalMillis = 0 } = options;
    this.widthMillis = widthMillis;
    this.removeExpiredOnEveryEvents = !(virtualTimeObj && removeExpiredIntervalMillis);

    options.winName = options.winName || '?';
    options.key = options.key || '?';

    // ----------------- stat ------------------
    this.stat = undefined as unknown as S;
    if (typeof options.initStat === 'function') {
      options.initStat(this);
    }
    this.setStat = options.setStat || (() => null);
    this.getStat = getStat ? (timeWindow: TimeWindow<T, S>, ...args: any[]) => getStat(timeWindow, ...args) : () => this.stat as any;
    // ------------------------------------------

    if (item) {
      this.add(item);
    }
    const self = this;
    if (!this.removeExpiredOnEveryEvents) {
      clearInterval(this._removeExpiredTimer);
      this._removeExpiredTimer = setInterval(() => {
        const st = Date.now();
        const removedCount = self.removeExpired((virtualTimeObj as VirtualTimeObj).virtualTs).length;
        if (debug.enabled && removedCount) {
          echo(`${m}–£–¥–∞–ª–µ–Ω–æ ${lBlue}${removedCount}${m
          } —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Å–æ–±—ã—Ç–∏–π –∏–∑ –æ–∫–Ω–∞ [TimeWindow] winName: ${this.options.winName} / key: ${this.options.key}  üïí ${Date.now() - st} ms`);
        }
      }, removeExpiredIntervalMillis);
    }
  }

  /**
   * –£–¥–∞–ª–µ–Ω–∏–µ (—É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö) —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–∫–Ω–∞, –æ–∫–∞–∑–∞–≤—à–∏—Ö—Å—è –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –ª–µ–≤–æ–π –≥—Ä–∞–Ω–∏—Ü—ã.
   * –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è
   * 1) –ª–∏–±–æ –ø—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ –µ–≥–æ –º–µ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏,
   * 2) –ª–∏–±–æ –ø–æ —Ç–∞–π–º–∞—É—Ç—É, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è.
   * –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –Ω–∞–ª–∏—á–∏–µ–º –æ–ø—Ü–∏–∏ virtualTimeObj –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º –æ–ø—Ü–∏–∏ removeExpiredIntervalMillis
   * –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞. –ï—Å–ª–∏ –µ—Å—Ç—å virtualTimeObj –∏ removeExpiredIntervalMillis > 0 –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ä–µ–∂–∏–º 2.
   * –ö—Ä–æ–º–µ —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –∏–∑–≤–Ω–µ. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫–æ–Ω –º–æ–∂–Ω–æ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ —Å–æ–≤–µ—Ä—à–∞—Ç—å
   * –æ–±—Ö–æ–¥ –æ–∫–æ–Ω –∏ —Å–æ–≤–µ—Ä—à–∞—Ç—å –æ—á–∏—Å—Ç–∫—É —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Å–æ–±—ã—Ç–∏–π –∏–∑ –Ω–∏—Ö.
   */
  removeExpired (virtualTs?: number, destructureIt: boolean = false): ITimeWindowItem<T>[] {
    if (virtualTs) {
      this.lastTs = virtualTs;
      this.expireTs = virtualTs - this.widthMillis; // –ü–æ—á–µ–º—É -widthMillis —Å–º. –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ –∫ —Å–≤–æ–π—Å—Ç–≤—É expireTs
    }
    const index = findIndexOfNearestSmaller(this.win, this.expireTs + 1, 'ts');
    if (index > -1) {
      const removed = this.win.splice(0, index + 1);
      if (destructureIt) {
        removed.forEach((timeWindowItem) => {
          timeWindowItem.data = undefined;
        });
      }
      return removed;
    }
    return [];
  }

  /**
   * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –≤ –æ–∫–Ω–æ
   *
   * –ù–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ this.add() –≤ –æ–∫–Ω–æ –ù–ê –°–í–û–ï –ú–ï–°–¢–û
   * (–µ–≥–æ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –±—É–¥–µ—Ç –Ω–µ –º–µ–Ω—å—à–µ —Å–æ–±—ã—Ç–∏—è —Å–ª–µ–≤–∞ –∏ –Ω–µ –±–æ–ª—å—à–µ —Å–æ–±—ã—Ç–∏—è —Å–ø—Ä–∞–≤–∞)
   * –¢—É—Ç –∂–µ:
   * - –≤—ã—Å—Ç–∞–≤–ª—è—é—Ç—Å—è —Å–≤–æ–π—Å—Ç–≤–∞ this.lastTs –∏ this.expireTs
   * - –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ this.setStat()
   * - –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ this.removeExpired(), –µ—Å–ª–∏ –≤–∑–≤–µ–¥–µ–Ω —Ñ–ª–∞–≥ this.removeExpiredOnEveryEvents.
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ —á—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –∏–ª–∏ null.
   */
  add (item: ITimeWindowItem<T>): ITimeWindowItem<T> | null {
    const { ts } = item;
    const { win, widthMillis } = this;
    if (!win.length) {
      win.push(item);
      // –ï—Å–ª–∏ –ø–æ—Å—Ç—É–ø–∏—Ç –æ—á–µ–Ω—å —Å—Ç–∞—Ä–æ–µ —Å–æ–±—ã—Ç–∏–µ, –æ–Ω–æ –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–¥–≤–∏–Ω—É—Ç—å –≤ –ø—Ä–æ—à–ª–æ–µ lastTs
      this.lastTs = ts;
      const expireTs = ts - widthMillis; // –í—Å–µ —Å–æ–±—ã—Ç–∏—è —Å—Ç–∞—Ä—à–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞ —à–∏—Ä–∏–Ω—É –æ–∫–Ω–∞ - —É—Å—Ç–∞—Ä–µ–≤–∞—é—Ç
      // –ï—Å–ª–∏ –ø–æ—Å—Ç—É–ø–∏—Ç –æ—á–µ–Ω—å —Å—Ç–∞—Ä–æ–µ —Å–æ–±—ã—Ç–∏–µ, –æ–Ω–æ –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–¥–≤–∏–Ω—É—Ç—å –≤ –ø—Ä–æ—à–ª–æ–µ –≤—Ä–µ–º—è —É—Å—Ç–∞—Ä–µ–≤–∞–Ω–∏—è
      this.expireTs = Math.max(this.expireTs, expireTs);
      this.setStat({ timeWindow: this, winInsertType: EWinInsertType.FIRST, added: item, removed: [] });
      return item;
    }
    if (ts < this.expireTs) {
      // –í —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∫–∏–¥—ã–≤–∞–µ–º –¥–∞–∂–µ —Ç–µ —Å–æ–±—ã—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ —É—Å—Ç–∞—Ä–µ–ª–∏, –Ω–µ —É—Å–ø–µ–≤ –ø–æ—Å—Ç—É–ø–∏—Ç—å
      this.setStat({ timeWindow: this, winInsertType: EWinInsertType.REMOVE, added: item, removed: [item] });
      return null;
    }
    let winInsertType: EWinInsertType;
    // –ó–¥–µ—Å—å –≤ –æ–∫–Ω–µ –µ—Å—Ç—å —Å–æ–±—ã—Ç–∏—è! –¢.–∫. –≤—ã–ø–æ–ª–Ω–µ–Ω–æ !!this.win.length –≤—ã—à–µ. –ó–Ω–∞—á–∏—Ç this.lastTs –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–±—ã—Ç–∏—é
    // (–ö –≤–æ–ø—Ä–æ—Å—É –æ —Ç–æ–º, –º–æ–∂–µ—Ç –ª–∏ –∑–¥–µ—Å—å this.lastTs –±—ã—Ç—å –ø—Ä–æ—Å—Ç–æ –≤—Ä–µ–º–µ–Ω–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—á–∏—Å—Ç–∫–∏, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –≤ this.removeExpired? - –ù–ï–¢!)
    if (ts > this.lastTs) {
      win.push(item);
      this.lastTs = ts;
      this.expireTs = ts - widthMillis; // –í—Å–µ —Å–æ–±—ã—Ç–∏—è —Å—Ç–∞—Ä—à–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞ —à–∏—Ä–∏–Ω—É –æ–∫–Ω–∞ - —É—Å—Ç–∞—Ä–µ–≤–∞—é—Ç
      winInsertType = EWinInsertType.RIGHT;
    } else {
      const insertIndex = findIndexOfNearestSmaller(win, ts, 'ts');
      if (insertIndex > -1) {
        win.splice(insertIndex + 1, 0, item);
        winInsertType = EWinInsertType.MIDDLE;
      } else {
        win.unshift(item);
        winInsertType = EWinInsertType.LEFT;
      }
    }
    // –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ —Å—Ä–∞–∑—É –∂–µ —É—Å—Ç–∞—Ä–µ–ª–æ.
    // –¢–æ–≥–∞ –æ–Ω–æ –±—É–¥–µ—Ç —à—Ç–∞—Ç–Ω–æ —É–¥–∞–ª–µ–Ω–æ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –æ—á–∏—Å—Ç–∫–µ.
    const removed = this.removeExpiredOnEveryEvents ? this.removeExpired() : [];
    this.setStat({ timeWindow: this, winInsertType, added: item, removed });
    return item;
  }

  /**
   * –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —à–∏—Ä–∏–Ω—ã –æ–∫–Ω–∞.
   * –°—Ä–∞–∑—É –∂–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Å–æ–±—ã—Ç–∏–π.
   */
  setWidth (widthMillis: number) {
    if (widthMillis < MIN_WINDOW_MILLIS || widthMillis === this.widthMillis) {
      return;
    }
    const isShrink = this.widthMillis > widthMillis;
    this.widthMillis = widthMillis;
    this.expireTs = this.lastTs - widthMillis; // –í—Å–µ —Å–æ–±—ã—Ç–∏—è —Å—Ç–∞—Ä—à–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞ —à–∏—Ä–∏–Ω—É –æ–∫–Ω–∞ - —É—Å—Ç–∞—Ä–µ–≤–∞—é—Ç
    if (isShrink) {
      this.removeExpired();
    }
  }

  /**
   * –æ—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞
   */
  clear () {
    this.win = [];
    this.lastTs = 0;
    this.expireTs = 0;
  }

  destroy () {
    clearInterval(this._removeExpiredTimer);
    this._removeExpiredTimer = undefined;
    // @ts-ignore
    this.win = undefined;
    this.stat = undefined as unknown as S;
    // @ts-ignore
    this.setStat = undefined;
    // @ts-ignore
    this.getStat = undefined;
  }
}
